import json

def convert_to_lat_lon_format(lat, lon):
    """Convert latitude and longitude to the N/S, E/W format."""
    lat_direction = 'N' if lat >= 0 else 'S'
    lon_direction = 'E' if lon >= 0 else 'W'

    # Convert to absolute values and format to 5 decimal places
    formatted_lat = f"{lat_direction}{abs(lat):.5f}"
    formatted_lon = f"{lon_direction}{abs(lon):.5f}"

    return formatted_lat, formatted_lon

def extract_coordinates(geojson_file, output_file):
    # Read the GeoJSON file
    with open(geojson_file, 'r') as f:
        data = json.load(f)

    formatted_coordinates = []

    # Process each feature in the GeoJSON
    for feature in data['features']:
        geometry = feature['geometry']
        if geometry['type'] == 'Point':
            lat, lon = convert_to_lat_lon_format(geometry['coordinates'][1], geometry['coordinates'][0])
            formatted_coordinates.append([lat, lon])
        elif geometry['type'] == 'LineString':
            line_coords = []
            for lon, lat in geometry['coordinates']:
                formatted_lat, formatted_lon = convert_to_lat_lon_format(lat, lon)
                line_coords.extend([formatted_lat, formatted_lon])
            formatted_coordinates.append(line_coords)

    # Write the formatted coordinates to the output file
    with open(output_file, 'w') as f:
        json.dump(formatted_coordinates, f, indent=4)

    print(f"Formatted coordinates have been extracted to {output_file}")

# Example usage:
extract_coordinates('D21_MVA.json', 'D21_MVA_output.json')
